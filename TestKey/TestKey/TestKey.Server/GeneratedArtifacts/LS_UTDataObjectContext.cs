//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK__EmployeeM__EmpID__74AE54BC", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EmployeeTable), "EmployeeMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeMonth), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EmployeeTable_ManagerID", "EmployeeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.EmployeeTable), "EmployeeTable1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeTable), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK__EmployeeM__Month__73BA3083", "MonthTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.MonthTable), "EmployeeMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeMonth), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_EmployeeProject_ProjectTable", "ProjectTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.ProjectTable), "EmployeeProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.EmployeeProject), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LS_UTData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LS_UTData object using the connection string found in the 'LS_UTData' section of the application configuration file.
        /// </summary>
        public LS_UTData() : base("name=LS_UTData", "LS_UTData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LS_UTData object.
        /// </summary>
        public LS_UTData(string connectionString) : base(connectionString, "LS_UTData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LS_UTData object.
        /// </summary>
        public LS_UTData(EntityConnection connection) : base(connection, "LS_UTData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeMonth> EmployeeMonths
        {
            get
            {
                if ((_EmployeeMonths == null))
                {
                    _EmployeeMonths = base.CreateObjectSet<EmployeeMonth>("EmployeeMonths");
                }
                return _EmployeeMonths;
            }
        }
        private ObjectSet<EmployeeMonth> _EmployeeMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeProject> EmployeeProjects
        {
            get
            {
                if ((_EmployeeProjects == null))
                {
                    _EmployeeProjects = base.CreateObjectSet<EmployeeProject>("EmployeeProjects");
                }
                return _EmployeeProjects;
            }
        }
        private ObjectSet<EmployeeProject> _EmployeeProjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTable> EmployeeTables
        {
            get
            {
                if ((_EmployeeTables == null))
                {
                    _EmployeeTables = base.CreateObjectSet<EmployeeTable>("EmployeeTables");
                }
                return _EmployeeTables;
            }
        }
        private ObjectSet<EmployeeTable> _EmployeeTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpProj> EmpProjs
        {
            get
            {
                if ((_EmpProjs == null))
                {
                    _EmpProjs = base.CreateObjectSet<EmpProj>("EmpProjs");
                }
                return _EmpProjs;
            }
        }
        private ObjectSet<EmpProj> _EmpProjs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MonthTable> MonthTables
        {
            get
            {
                if ((_MonthTables == null))
                {
                    _MonthTables = base.CreateObjectSet<MonthTable>("MonthTables");
                }
                return _MonthTables;
            }
        }
        private ObjectSet<MonthTable> _MonthTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectTable> ProjectTables
        {
            get
            {
                if ((_ProjectTables == null))
                {
                    _ProjectTables = base.CreateObjectSet<ProjectTable>("ProjectTables");
                }
                return _ProjectTables;
            }
        }
        private ObjectSet<ProjectTable> _ProjectTables;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeMonths(EmployeeMonth employeeMonth)
        {
            base.AddObject("EmployeeMonths", employeeMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeProjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeProjects(EmployeeProject employeeProject)
        {
            base.AddObject("EmployeeProjects", employeeProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTables(EmployeeTable employeeTable)
        {
            base.AddObject("EmployeeTables", employeeTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpProjs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpProjs(EmpProj empProj)
        {
            base.AddObject("EmpProjs", empProj);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MonthTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonthTables(MonthTable monthTable)
        {
            base.AddObject("MonthTables", monthTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectTables(ProjectTable projectTable)
        {
            base.AddObject("ProjectTables", projectTable);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeMonth object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        public static EmployeeMonth CreateEmployeeMonth(global::System.Int32 empID, global::System.Int32 monthID)
        {
            EmployeeMonth employeeMonth = new EmployeeMonth();
            employeeMonth.EmpID = empID;
            employeeMonth.MonthID = monthID;
            return employeeMonth;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfHolidays
        {
            get
            {
                return _NoOfHolidays;
            }
            set
            {
                OnNoOfHolidaysChanging(value);
                ReportPropertyChanging("NoOfHolidays");
                _NoOfHolidays = value;
                ReportPropertyChanged("NoOfHolidays");
                OnNoOfHolidaysChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfHolidays;
        partial void OnNoOfHolidaysChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfHolidaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfLeaves
        {
            get
            {
                return _NoOfLeaves;
            }
            set
            {
                OnNoOfLeavesChanging(value);
                ReportPropertyChanging("NoOfLeaves");
                _NoOfLeaves = value;
                ReportPropertyChanged("NoOfLeaves");
                OnNoOfLeavesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfLeaves;
        partial void OnNoOfLeavesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfLeavesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalHours
        {
            get
            {
                return _TotalHours;
            }
            set
            {
                OnTotalHoursChanging(value);
                ReportPropertyChanging("TotalHours");
                _TotalHours = value;
                ReportPropertyChanged("TotalHours");
                OnTotalHoursChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalHours;
        partial void OnTotalHoursChanging(Nullable<global::System.Int32> value);
        partial void OnTotalHoursChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK__EmployeeM__EmpID__74AE54BC", "EmployeeTable")]
        public EmployeeTable EmployeeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("LightSwitchApplication.FK__EmployeeM__EmpID__74AE54BC", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("LightSwitchApplication.FK__EmployeeM__EmpID__74AE54BC", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("LightSwitchApplication.FK__EmployeeM__EmpID__74AE54BC", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("LightSwitchApplication.FK__EmployeeM__EmpID__74AE54BC", "EmployeeTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK__EmployeeM__Month__73BA3083", "MonthTable")]
        public MonthTable MonthTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonthTable>("LightSwitchApplication.FK__EmployeeM__Month__73BA3083", "MonthTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonthTable>("LightSwitchApplication.FK__EmployeeM__Month__73BA3083", "MonthTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MonthTable> MonthTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonthTable>("LightSwitchApplication.FK__EmployeeM__Month__73BA3083", "MonthTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MonthTable>("LightSwitchApplication.FK__EmployeeM__Month__73BA3083", "MonthTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeProject object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        public static EmployeeProject CreateEmployeeProject(global::System.Int32 empID, global::System.Int32 projectID, global::System.Int32 taskID, global::System.Int32 monthID, global::System.Decimal hours)
        {
            EmployeeProject employeeProject = new EmployeeProject();
            employeeProject.EmpID = empID;
            employeeProject.ProjectID = projectID;
            employeeProject.TaskID = taskID;
            employeeProject.MonthID = monthID;
            employeeProject.Hours = hours;
            return employeeProject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = value;
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubProject
        {
            get
            {
                return _SubProject;
            }
            set
            {
                OnSubProjectChanging(value);
                ReportPropertyChanging("SubProject");
                _SubProject = value;
                ReportPropertyChanged("SubProject");
                OnSubProjectChanged();
            }
        }
        private global::System.String _SubProject;
        partial void OnSubProjectChanging(global::System.String value);
        partial void OnSubProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                OnMonthIDChanging(value);
                ReportPropertyChanging("MonthID");
                _MonthID = value;
                ReportPropertyChanged("MonthID");
                OnMonthIDChanged();
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _c_Date;
        partial void Onc_DateChanging(Nullable<global::System.DateTime> value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = value;
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private global::System.Decimal _Hours;
        partial void OnHoursChanging(global::System.Decimal value);
        partial void OnHoursChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeProject_ProjectTable", "ProjectTable")]
        public ProjectTable ProjectTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTable>("LightSwitchApplication.FK_EmployeeProject_ProjectTable", "ProjectTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTable>("LightSwitchApplication.FK_EmployeeProject_ProjectTable", "ProjectTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectTable> ProjectTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectTable>("LightSwitchApplication.FK_EmployeeProject_ProjectTable", "ProjectTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectTable>("LightSwitchApplication.FK_EmployeeProject_ProjectTable", "ProjectTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmployeeTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTable object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="managerID">Initial value of the ManagerID property.</param>
        public static EmployeeTable CreateEmployeeTable(global::System.Int32 empID, global::System.Int32 managerID)
        {
            EmployeeTable employeeTable = new EmployeeTable();
            employeeTable.EmpID = empID;
            employeeTable.ManagerID = managerID;
            return employeeTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmpName
        {
            get
            {
                return _EmpName;
            }
            set
            {
                OnEmpNameChanging(value);
                ReportPropertyChanging("EmpName");
                _EmpName = value;
                ReportPropertyChanged("EmpName");
                OnEmpNameChanged();
            }
        }
        private global::System.String _EmpName;
        partial void OnEmpNameChanging(global::System.String value);
        partial void OnEmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = value;
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = value;
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = value;
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private global::System.Int32 _ManagerID;
        partial void OnManagerIDChanging(global::System.Int32 value);
        partial void OnManagerIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK__EmployeeM__EmpID__74AE54BC", "EmployeeMonth")]
        public EntityCollection<EmployeeMonth> EmployeeMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeMonth>("LightSwitchApplication.FK__EmployeeM__EmpID__74AE54BC", "EmployeeMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeMonth>("LightSwitchApplication.FK__EmployeeM__EmpID__74AE54BC", "EmployeeMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeTable_ManagerID", "EmployeeTable1")]
        public EntityCollection<EmployeeTable> EmployeeTables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeTable>("LightSwitchApplication.FK_EmployeeTable_ManagerID", "EmployeeTable1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeTable>("LightSwitchApplication.FK_EmployeeTable_ManagerID", "EmployeeTable1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeTable_ManagerID", "EmployeeTable")]
        public EmployeeTable EmployeeTable1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("LightSwitchApplication.FK_EmployeeTable_ManagerID", "EmployeeTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("LightSwitchApplication.FK_EmployeeTable_ManagerID", "EmployeeTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTable> EmployeeTable1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTable>("LightSwitchApplication.FK_EmployeeTable_ManagerID", "EmployeeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTable>("LightSwitchApplication.FK_EmployeeTable_ManagerID", "EmployeeTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EmpProj")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpProj : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpProj object.
        /// </summary>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        public static EmpProj CreateEmpProj(global::System.String monthName, global::System.Decimal hours)
        {
            EmpProj empProj = new EmpProj();
            empProj.MonthName = monthName;
            empProj.Hours = hours;
            return empProj;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                if (_MonthName != value)
                {
                    OnMonthNameChanging(value);
                    ReportPropertyChanging("MonthName");
                    _MonthName = value;
                    ReportPropertyChanged("MonthName");
                    OnMonthNameChanged();
                }
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubProject
        {
            get
            {
                return _SubProject;
            }
            set
            {
                OnSubProjectChanging(value);
                ReportPropertyChanging("SubProject");
                _SubProject = value;
                ReportPropertyChanged("SubProject");
                OnSubProjectChanged();
            }
        }
        private global::System.String _SubProject;
        partial void OnSubProjectChanging(global::System.String value);
        partial void OnSubProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _c_Date;
        partial void Onc_DateChanging(Nullable<global::System.DateTime> value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                if (_Hours != value)
                {
                    OnHoursChanging(value);
                    ReportPropertyChanging("Hours");
                    _Hours = value;
                    ReportPropertyChanged("Hours");
                    OnHoursChanged();
                }
            }
        }
        private global::System.Decimal _Hours;
        partial void OnHoursChanging(global::System.Decimal value);
        partial void OnHoursChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MonthTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonthTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonthTable object.
        /// </summary>
        /// <param name="monthID">Initial value of the MonthID property.</param>
        /// <param name="monthName">Initial value of the MonthName property.</param>
        /// <param name="noOfDays">Initial value of the NoOfDays property.</param>
        /// <param name="weekDays">Initial value of the WeekDays property.</param>
        public static MonthTable CreateMonthTable(global::System.Int32 monthID, global::System.String monthName, global::System.Int32 noOfDays, global::System.Int32 weekDays)
        {
            MonthTable monthTable = new MonthTable();
            monthTable.MonthID = monthID;
            monthTable.MonthName = monthName;
            monthTable.NoOfDays = noOfDays;
            monthTable.WeekDays = weekDays;
            return monthTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthID
        {
            get
            {
                return _MonthID;
            }
            set
            {
                if (_MonthID != value)
                {
                    OnMonthIDChanging(value);
                    ReportPropertyChanging("MonthID");
                    _MonthID = value;
                    ReportPropertyChanged("MonthID");
                    OnMonthIDChanged();
                }
            }
        }
        private global::System.Int32 _MonthID;
        partial void OnMonthIDChanging(global::System.Int32 value);
        partial void OnMonthIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonthName
        {
            get
            {
                return _MonthName;
            }
            set
            {
                OnMonthNameChanging(value);
                ReportPropertyChanging("MonthName");
                _MonthName = value;
                ReportPropertyChanged("MonthName");
                OnMonthNameChanged();
            }
        }
        private global::System.String _MonthName;
        partial void OnMonthNameChanging(global::System.String value);
        partial void OnMonthNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoOfDays
        {
            get
            {
                return _NoOfDays;
            }
            set
            {
                OnNoOfDaysChanging(value);
                ReportPropertyChanging("NoOfDays");
                _NoOfDays = value;
                ReportPropertyChanged("NoOfDays");
                OnNoOfDaysChanged();
            }
        }
        private global::System.Int32 _NoOfDays;
        partial void OnNoOfDaysChanging(global::System.Int32 value);
        partial void OnNoOfDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeekDays
        {
            get
            {
                return _WeekDays;
            }
            set
            {
                OnWeekDaysChanging(value);
                ReportPropertyChanging("WeekDays");
                _WeekDays = value;
                ReportPropertyChanged("WeekDays");
                OnWeekDaysChanged();
            }
        }
        private global::System.Int32 _WeekDays;
        partial void OnWeekDaysChanging(global::System.Int32 value);
        partial void OnWeekDaysChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK__EmployeeM__Month__73BA3083", "EmployeeMonth")]
        public EntityCollection<EmployeeMonth> EmployeeMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeMonth>("LightSwitchApplication.FK__EmployeeM__Month__73BA3083", "EmployeeMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeMonth>("LightSwitchApplication.FK__EmployeeM__Month__73BA3083", "EmployeeMonth", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectTable object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static ProjectTable CreateProjectTable(global::System.Int32 empID, global::System.Int32 projectID)
        {
            ProjectTable projectTable = new ProjectTable();
            projectTable.EmpID = empID;
            projectTable.ProjectID = projectID;
            return projectTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = value;
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int32 _EmpID;
        partial void OnEmpIDChanging(global::System.Int32 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = value;
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = value;
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Complexity
        {
            get
            {
                return _Complexity;
            }
            set
            {
                OnComplexityChanging(value);
                ReportPropertyChanging("Complexity");
                _Complexity = value;
                ReportPropertyChanged("Complexity");
                OnComplexityChanged();
            }
        }
        private Nullable<global::System.Int32> _Complexity;
        partial void OnComplexityChanging(Nullable<global::System.Int32> value);
        partial void OnComplexityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Scope
        {
            get
            {
                return _Scope;
            }
            set
            {
                OnScopeChanging(value);
                ReportPropertyChanging("Scope");
                _Scope = value;
                ReportPropertyChanged("Scope");
                OnScopeChanged();
            }
        }
        private Nullable<global::System.Int32> _Scope;
        partial void OnScopeChanging(Nullable<global::System.Int32> value);
        partial void OnScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectType
        {
            get
            {
                return _ProjectType;
            }
            set
            {
                OnProjectTypeChanging(value);
                ReportPropertyChanging("ProjectType");
                _ProjectType = value;
                ReportPropertyChanged("ProjectType");
                OnProjectTypeChanged();
            }
        }
        private global::System.String _ProjectType;
        partial void OnProjectTypeChanging(global::System.String value);
        partial void OnProjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectStatus
        {
            get
            {
                return _ProjectStatus;
            }
            set
            {
                OnProjectStatusChanging(value);
                ReportPropertyChanging("ProjectStatus");
                _ProjectStatus = value;
                ReportPropertyChanged("ProjectStatus");
                OnProjectStatusChanged();
            }
        }
        private global::System.String _ProjectStatus;
        partial void OnProjectStatusChanging(global::System.String value);
        partial void OnProjectStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = value;
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = value;
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_EmployeeProject_ProjectTable", "EmployeeProject")]
        public EntityCollection<EmployeeProject> EmployeeProjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeProject>("LightSwitchApplication.FK_EmployeeProject_ProjectTable", "EmployeeProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeProject>("LightSwitchApplication.FK_EmployeeProject_ProjectTable", "EmployeeProject", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
