

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class EmployeeMonth : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the EmployeeMonth entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeMonth()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeeMonth(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EmployeeMonth> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.EmployeeMonth.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeMonth_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeMonth_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmpID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmpID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MonthID
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthID);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> NoOfHolidays
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfHolidays);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfHolidays, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfHolidays_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfHolidays_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfHolidays_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> NoOfLeaves
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfLeaves);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfLeaves, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfLeaves_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfLeaves_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NoOfLeaves_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TotalHours
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.TotalHours);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.TotalHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.EmployeeTable EmployeeTable
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeTable);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeTable, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTable_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTable_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTable_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.MonthTable MonthTable
        {
            get
            {
                return global::LightSwitchApplication.EmployeeMonth.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthTable);
            }
            set
            {
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthTable, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthTable_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthTable_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MonthTable_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.EmployeeMonth,
                global::LightSwitchApplication.EmployeeMonth.DetailsClass,
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.IImplementation,
                global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>.Entry
                __EmployeeMonthEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeMonth.DetailsClass.__EmployeeMonth_CreateNew,
                    global::LightSwitchApplication.EmployeeMonth.DetailsClass.__EmployeeMonth_Created,
                    global::LightSwitchApplication.EmployeeMonth.DetailsClass.__EmployeeMonth_AllowSaveWithErrors);
            private static global::LightSwitchApplication.EmployeeMonth __EmployeeMonth_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EmployeeMonth> es)
            {
                return new global::LightSwitchApplication.EmployeeMonth(es);
            }
            private static void __EmployeeMonth_Created(global::LightSwitchApplication.EmployeeMonth e)
            {
                e.EmployeeMonth_Created();
            }
            private static bool __EmployeeMonth_AllowSaveWithErrors(global::LightSwitchApplication.EmployeeMonth e)
            {
                bool result = false;
                e.EmployeeMonth_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int> EmpID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmpID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int> MonthID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>> NoOfHolidays
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfHolidays) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>> NoOfLeaves
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.NoOfLeaves) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>> TotalHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.TotalHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeTable> EmployeeTable
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeTable) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeTable>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.MonthTable> MonthTable
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthTable) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.MonthTable>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int EmpID { get; set; }
                new int MonthID { get; set; }
                new global::System.Nullable<int> NoOfHolidays { get; set; }
                new global::System.Nullable<int> NoOfLeaves { get; set; }
                new global::System.Nullable<int> TotalHours { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation EmployeeTable { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation MonthTable { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry
                    EmpID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry(
                        "EmpID",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmpID_OnValueChanged);
                private static void _EmpID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._EmpID, sf);
                }
                private static bool _EmpID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.EmpID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmpID_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmpID_Validate(r);
                }
                private static int _EmpID_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.EmpID;
                }
                private static void _EmpID_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.EmpID = v;
                }
                private static void _EmpID_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.EmpID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry
                    MonthID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Entry(
                        "MonthID",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthID_OnValueChanged);
                private static void _MonthID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthID, sf);
                }
                private static bool _MonthID_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.MonthID_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthID_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthID_Validate(r);
                }
                private static int _MonthID_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthID;
                }
                private static void _MonthID_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MonthID = v;
                }
                private static void _MonthID_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.MonthID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Entry
                    NoOfHolidays = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Entry(
                        "NoOfHolidays",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfHolidays_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfHolidays_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfHolidays_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfHolidays_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfHolidays_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfHolidays_OnValueChanged);
                private static void _NoOfHolidays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._NoOfHolidays, sf);
                }
                private static bool _NoOfHolidays_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.NoOfHolidays_IsReadOnly(ref result);
                    return result;
                }
                private static void _NoOfHolidays_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NoOfHolidays_Validate(r);
                }
                private static global::System.Nullable<int> _NoOfHolidays_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.NoOfHolidays;
                }
                private static void _NoOfHolidays_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.NoOfHolidays = v;
                }
                private static void _NoOfHolidays_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.NoOfHolidays_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Entry
                    NoOfLeaves = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Entry(
                        "NoOfLeaves",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._NoOfLeaves_OnValueChanged);
                private static void _NoOfLeaves_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._NoOfLeaves, sf);
                }
                private static bool _NoOfLeaves_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.NoOfLeaves_IsReadOnly(ref result);
                    return result;
                }
                private static void _NoOfLeaves_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NoOfLeaves_Validate(r);
                }
                private static global::System.Nullable<int> _NoOfLeaves_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.NoOfLeaves;
                }
                private static void _NoOfLeaves_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.NoOfLeaves = v;
                }
                private static void _NoOfLeaves_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.NoOfLeaves_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Entry
                    TotalHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TotalHours",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._TotalHours_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._TotalHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._TotalHours_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._TotalHours_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._TotalHours_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._TotalHours_OnValueChanged);
                private static void _TotalHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalHours, sf);
                }
                private static bool _TotalHours_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.TotalHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalHours_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalHours_Validate(r);
                }
                private static global::System.Nullable<int> _TotalHours_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalHours;
                }
                private static void _TotalHours_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TotalHours = v;
                }
                private static void _TotalHours_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.TotalHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeTable>.Entry
                    EmployeeTable = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeTable>.Entry(
                        "EmployeeTable",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_GetCoreImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_Refresh,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._EmployeeTable_OnValueChanged);
                private static void _EmployeeTable_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeTable>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeTable, sf);
                }
                private static bool _EmployeeTable_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.EmployeeTable_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmployeeTable_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeTable_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _EmployeeTable_GetCoreImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeTable;
                }
                private static global::LightSwitchApplication.EmployeeTable _EmployeeTable_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.EmployeeTable, global::LightSwitchApplication.EmployeeTable.DetailsClass>(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeTable, ref d._EmployeeTable);
                }
                private static void _EmployeeTable_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::LightSwitchApplication.EmployeeTable v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeTable, ref d._EmployeeTable, (i, ev) => i.EmployeeTable = ev, v);
                }
                private static void _EmployeeTable_Refresh(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.EmployeeTable, ref d._EmployeeTable);
                }
                private static void _EmployeeTable_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.EmployeeTable_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.MonthTable>.Entry
                    MonthTable = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.MonthTable>.Entry(
                        "MonthTable",
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_Stub,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_ComputeIsReadOnly,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_Validate,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_GetCoreImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_GetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_SetImplementationValue,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_Refresh,
                        global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties._MonthTable_OnValueChanged);
                private static void _MonthTable_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.MonthTable>.Data> c, global::LightSwitchApplication.EmployeeMonth.DetailsClass d, object sf)
                {
                    c(d, ref d._MonthTable, sf);
                }
                private static bool _MonthTable_ComputeIsReadOnly(global::LightSwitchApplication.EmployeeMonth e)
                {
                    bool result = false;
                    e.MonthTable_IsReadOnly(ref result);
                    return result;
                }
                private static void _MonthTable_Validate(global::LightSwitchApplication.EmployeeMonth e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MonthTable_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _MonthTable_GetCoreImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.ImplementationEntity.MonthTable;
                }
                private static global::LightSwitchApplication.MonthTable _MonthTable_GetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.MonthTable, global::LightSwitchApplication.MonthTable.DetailsClass>(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthTable, ref d._MonthTable);
                }
                private static void _MonthTable_SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass d, global::LightSwitchApplication.MonthTable v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthTable, ref d._MonthTable, (i, ev) => i.MonthTable = ev, v);
                }
                private static void _MonthTable_Refresh(global::LightSwitchApplication.EmployeeMonth.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EmployeeMonth.DetailsClass.PropertySetProperties.MonthTable, ref d._MonthTable);
                }
                private static void _MonthTable_OnValueChanged(global::LightSwitchApplication.EmployeeMonth e)
                {
                    e.MonthTable_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data _EmpID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, int>.Data _MonthID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Data _NoOfHolidays;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Data _NoOfLeaves;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::System.Nullable<int>>.Data _TotalHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.EmployeeTable>.Data _EmployeeTable;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EmployeeMonth, global::LightSwitchApplication.EmployeeMonth.DetailsClass, global::LightSwitchApplication.MonthTable>.Data _MonthTable;
            
        }
    
        #endregion
    }
    
    #endregion
}
